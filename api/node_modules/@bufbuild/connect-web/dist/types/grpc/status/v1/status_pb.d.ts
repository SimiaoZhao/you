import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message } from "@bufbuild/protobuf";
/**
 * @generated from message grpc.status.v1.Status
 */
export declare class Status extends Message<Status> {
    /**
     * @generated from field: int32 code = 1;
     */
    code: number;
    /**
     * @generated from field: string message = 2;
     */
    message: string;
    /**
     * @generated from field: repeated google.protobuf.Any details = 3;
     */
    details: Any[];
    constructor(data?: PartialMessage<Status>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "grpc.status.v1.Status";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Status;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Status;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Status;
    static equals(a: Status | PlainMessage<Status> | undefined, b: Status | PlainMessage<Status> | undefined): boolean;
}
