// Copyright 2021-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { Any, Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from message grpc.status.v1.Status
 */
export class Status extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 code = 1;
         */
        this.code = 0;
        /**
         * @generated from field: string message = 2;
         */
        this.message = "";
        /**
         * @generated from field: repeated google.protobuf.Any details = 3;
         */
        this.details = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Status().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Status().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Status().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Status, a, b);
    }
}
Status.runtime = proto3;
Status.typeName = "grpc.status.v1.Status";
Status.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "details", kind: "message", T: Any, repeated: true },
]);
