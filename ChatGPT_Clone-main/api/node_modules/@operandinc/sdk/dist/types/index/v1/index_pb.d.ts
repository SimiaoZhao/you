import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, Timestamp } from "@bufbuild/protobuf";
/**
 * @generated from enum index.v1.ObjectType
 */
export declare enum ObjectType {
    /**
     * @generated from enum value: OBJECT_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: OBJECT_TYPE_COLLECTION = 1;
     */
    COLLECTION = 1,
    /**
     * @generated from enum value: OBJECT_TYPE_TEXT = 2;
     */
    TEXT = 2,
    /**
     * @generated from enum value: OBJECT_TYPE_HTML = 3;
     */
    HTML = 3,
    /**
     * @generated from enum value: OBJECT_TYPE_IMAGE = 4;
     */
    IMAGE = 4,
    /**
     * @generated from enum value: OBJECT_TYPE_PDF = 5;
     */
    PDF = 5,
    /**
     * @generated from enum value: OBJECT_TYPE_AUDIO = 6;
     */
    AUDIO = 6,
    /**
     * Slack is a unique object type, which requires some additional work
     * on the client side to get working. First off, when the object is first
     * created, we'll do a fetch of all the messages that we have access to,
     * i.e. all the channels that we've been added to. Following this, we await
     * webhook events from Slack, sent via the Webhook API method of this service.
     * We expect the client to essentially reverse proxy certain slack webhooks to
     * the correct object ID, which we'll then use to update the object. Specifically,
     * we support webhooks when we're added to a new channel, and when a new message
     * is posted to a channel we're part of.
     *
     * @generated from enum value: OBJECT_TYPE_SLACK = 7;
     */
    SLACK = 7
}
/**
 * @generated from enum index.v1.ObjectStatus
 */
export declare enum ObjectStatus {
    /**
     * @generated from enum value: OBJECT_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: OBJECT_STATUS_QUEUED = 1;
     */
    QUEUED = 1,
    /**
     * @generated from enum value: OBJECT_STATUS_INDEXING = 2;
     */
    INDEXING = 2,
    /**
     * @generated from enum value: OBJECT_STATUS_READY = 3;
     */
    READY = 3,
    /**
     * @generated from enum value: OBJECT_STATUS_ERROR = 4;
     */
    ERROR = 4
}
/**
 * @generated from message index.v1.UpsertObjectRequest
 */
export declare class UpsertObjectRequest extends Message<UpsertObjectRequest> {
    /**
     * @generated from field: optional string existing_id = 1;
     */
    existingId?: string;
    /**
     * @generated from field: optional string parent_id = 2;
     */
    parentId?: string;
    /**
     * @generated from field: optional index.v1.ObjectType object_type = 3;
     */
    objectType?: ObjectType;
    /**
     * @generated from field: optional index.v1.ObjectMetadata metadata = 4;
     */
    metadata?: ObjectMetadata;
    /**
     * @generated from field: optional index.v1.Properties properties = 5;
     */
    properties?: Properties;
    /**
     * @generated from field: optional string label = 6;
     */
    label?: string;
    /**
     * If true, the label of this object will be considered unique, and thus if an existing
     * object (with the same parent id) already exists, existing_id will be set accordingly.
     * Note: If this is true, the label must be set (i.e. non-empty) and existing_id must not be set.
     *
     * @generated from field: optional bool unique_label = 7;
     */
    uniqueLabel?: boolean;
    constructor(data?: PartialMessage<UpsertObjectRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.UpsertObjectRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertObjectRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertObjectRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertObjectRequest;
    static equals(a: UpsertObjectRequest | PlainMessage<UpsertObjectRequest> | undefined, b: UpsertObjectRequest | PlainMessage<UpsertObjectRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.UpsertObjectResponse
 */
export declare class UpsertObjectResponse extends Message<UpsertObjectResponse> {
    /**
     * @generated from field: index.v1.Object object = 1;
     */
    object?: Object$;
    constructor(data?: PartialMessage<UpsertObjectResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.UpsertObjectResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertObjectResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertObjectResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertObjectResponse;
    static equals(a: UpsertObjectResponse | PlainMessage<UpsertObjectResponse> | undefined, b: UpsertObjectResponse | PlainMessage<UpsertObjectResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.BulkUpsertObjectsRequest
 */
export declare class BulkUpsertObjectsRequest extends Message<BulkUpsertObjectsRequest> {
    /**
     * TODO(Morgan): Add sync option (i.e. wait and return responses).
     *
     * @generated from field: repeated index.v1.UpsertObjectRequest requests = 1;
     */
    requests: UpsertObjectRequest[];
    constructor(data?: PartialMessage<BulkUpsertObjectsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.BulkUpsertObjectsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkUpsertObjectsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkUpsertObjectsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkUpsertObjectsRequest;
    static equals(a: BulkUpsertObjectsRequest | PlainMessage<BulkUpsertObjectsRequest> | undefined, b: BulkUpsertObjectsRequest | PlainMessage<BulkUpsertObjectsRequest> | undefined): boolean;
}
/**
 * Currently, no way of checking if this operation was successful.
 *
 * @generated from message index.v1.BulkUpsertObjectsResponse
 */
export declare class BulkUpsertObjectsResponse extends Message<BulkUpsertObjectsResponse> {
    constructor(data?: PartialMessage<BulkUpsertObjectsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.BulkUpsertObjectsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkUpsertObjectsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkUpsertObjectsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkUpsertObjectsResponse;
    static equals(a: BulkUpsertObjectsResponse | PlainMessage<BulkUpsertObjectsResponse> | undefined, b: BulkUpsertObjectsResponse | PlainMessage<BulkUpsertObjectsResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.ListObjectsRequest
 */
export declare class ListObjectsRequest extends Message<ListObjectsRequest> {
    /**
     * @generated from field: optional string parent_id = 1;
     */
    parentId?: string;
    /**
     * @generated from field: optional string cursor = 2;
     */
    cursor?: string;
    /**
     * @generated from field: optional int32 limit = 3;
     */
    limit?: number;
    /**
     * If specified, we'll only return objects that have this label.
     * Note: Labels aren't required to be unique, so it is up to the
     * application to account for this.
     *
     * @generated from field: optional string label = 4;
     */
    label?: string;
    constructor(data?: PartialMessage<ListObjectsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.ListObjectsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListObjectsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListObjectsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListObjectsRequest;
    static equals(a: ListObjectsRequest | PlainMessage<ListObjectsRequest> | undefined, b: ListObjectsRequest | PlainMessage<ListObjectsRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.ListObjectsResponse
 */
export declare class ListObjectsResponse extends Message<ListObjectsResponse> {
    /**
     * @generated from field: repeated index.v1.Object objects = 1;
     */
    objects: Object$[];
    /**
     * @generated from field: optional string next_cursor = 2;
     */
    nextCursor?: string;
    constructor(data?: PartialMessage<ListObjectsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.ListObjectsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListObjectsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListObjectsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListObjectsResponse;
    static equals(a: ListObjectsResponse | PlainMessage<ListObjectsResponse> | undefined, b: ListObjectsResponse | PlainMessage<ListObjectsResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.GetObjectsRequest
 */
export declare class GetObjectsRequest extends Message<GetObjectsRequest> {
    /**
     * @generated from field: repeated string object_ids = 1;
     */
    objectIds: string[];
    constructor(data?: PartialMessage<GetObjectsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.GetObjectsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectsRequest;
    static equals(a: GetObjectsRequest | PlainMessage<GetObjectsRequest> | undefined, b: GetObjectsRequest | PlainMessage<GetObjectsRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.GetObjectsResponse
 */
export declare class GetObjectsResponse extends Message<GetObjectsResponse> {
    /**
     * @generated from field: map<string, index.v1.Object> objects = 1;
     */
    objects: {
        [key: string]: Object$;
    };
    /**
     * @generated from field: repeated string missing = 2;
     */
    missing: string[];
    constructor(data?: PartialMessage<GetObjectsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.GetObjectsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetObjectsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetObjectsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetObjectsResponse;
    static equals(a: GetObjectsResponse | PlainMessage<GetObjectsResponse> | undefined, b: GetObjectsResponse | PlainMessage<GetObjectsResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.DeleteObjectRequest
 */
export declare class DeleteObjectRequest extends Message<DeleteObjectRequest> {
    /**
     * @generated from field: string id = 1;
     */
    id: string;
    constructor(data?: PartialMessage<DeleteObjectRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.DeleteObjectRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectRequest;
    static equals(a: DeleteObjectRequest | PlainMessage<DeleteObjectRequest> | undefined, b: DeleteObjectRequest | PlainMessage<DeleteObjectRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.DeleteObjectResponse
 */
export declare class DeleteObjectResponse extends Message<DeleteObjectResponse> {
    /**
     * @generated from field: int32 deleted = 1;
     */
    deleted: number;
    constructor(data?: PartialMessage<DeleteObjectResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.DeleteObjectResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteObjectResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteObjectResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteObjectResponse;
    static equals(a: DeleteObjectResponse | PlainMessage<DeleteObjectResponse> | undefined, b: DeleteObjectResponse | PlainMessage<DeleteObjectResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.BulkDeleteObjectsRequest
 */
export declare class BulkDeleteObjectsRequest extends Message<BulkDeleteObjectsRequest> {
    /**
     * Only affect objects with this parent.
     * If unspecified, will default to the root, i.e.
     * objects with no parent.
     *
     * @generated from field: optional string parent_id = 1;
     */
    parentId?: string;
    /**
     * Label can be an exact match, or use '%' as a wildcard.
     * For example, 'foo%' will match all labels that start with 'foo'.
     * This is case sensitive.
     *
     * @generated from field: string label = 2;
     */
    label: string;
    constructor(data?: PartialMessage<BulkDeleteObjectsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.BulkDeleteObjectsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkDeleteObjectsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkDeleteObjectsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkDeleteObjectsRequest;
    static equals(a: BulkDeleteObjectsRequest | PlainMessage<BulkDeleteObjectsRequest> | undefined, b: BulkDeleteObjectsRequest | PlainMessage<BulkDeleteObjectsRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.BulkDeleteObjectsResponse
 */
export declare class BulkDeleteObjectsResponse extends Message<BulkDeleteObjectsResponse> {
    constructor(data?: PartialMessage<BulkDeleteObjectsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.BulkDeleteObjectsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkDeleteObjectsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkDeleteObjectsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkDeleteObjectsResponse;
    static equals(a: BulkDeleteObjectsResponse | PlainMessage<BulkDeleteObjectsResponse> | undefined, b: BulkDeleteObjectsResponse | PlainMessage<BulkDeleteObjectsResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.CountObjectsRequest
 */
export declare class CountObjectsRequest extends Message<CountObjectsRequest> {
    /**
     * @generated from field: optional string parent_id = 1;
     */
    parentId?: string;
    /**
     * Same behavior as ListObjectsRequest.label.
     *
     * @generated from field: optional string label = 2;
     */
    label?: string;
    constructor(data?: PartialMessage<CountObjectsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.CountObjectsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountObjectsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountObjectsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountObjectsRequest;
    static equals(a: CountObjectsRequest | PlainMessage<CountObjectsRequest> | undefined, b: CountObjectsRequest | PlainMessage<CountObjectsRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.CountObjectsResponse
 */
export declare class CountObjectsResponse extends Message<CountObjectsResponse> {
    /**
     * @generated from field: int32 count = 1;
     */
    count: number;
    constructor(data?: PartialMessage<CountObjectsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.CountObjectsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountObjectsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountObjectsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountObjectsResponse;
    static equals(a: CountObjectsResponse | PlainMessage<CountObjectsResponse> | undefined, b: CountObjectsResponse | PlainMessage<CountObjectsResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.WebhookRequest
 */
export declare class WebhookRequest extends Message<WebhookRequest> {
    /**
     * @generated from field: string object_id = 1;
     */
    objectId: string;
    /**
     * @generated from field: string operation = 2;
     */
    operation: string;
    /**
     * @generated from field: bytes body = 3;
     */
    body: Uint8Array;
    constructor(data?: PartialMessage<WebhookRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.WebhookRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebhookRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebhookRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebhookRequest;
    static equals(a: WebhookRequest | PlainMessage<WebhookRequest> | undefined, b: WebhookRequest | PlainMessage<WebhookRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.WebhookResponse
 */
export declare class WebhookResponse extends Message<WebhookResponse> {
    /**
     * @generated from field: bytes body = 1;
     */
    body: Uint8Array;
    constructor(data?: PartialMessage<WebhookResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.WebhookResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebhookResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebhookResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebhookResponse;
    static equals(a: WebhookResponse | PlainMessage<WebhookResponse> | undefined, b: WebhookResponse | PlainMessage<WebhookResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.SearchRequest
 */
export declare class SearchRequest extends Message<SearchRequest> {
    /**
     * @generated from field: string query = 1;
     */
    query: string;
    /**
     * @generated from field: repeated string roots = 2;
     */
    roots: string[];
    /**
     * @generated from field: optional string session_id = 3;
     */
    sessionId?: string;
    /**
     * @generated from field: optional index.v1.Filter filter = 4;
     */
    filter?: Filter;
    /**
     * @generated from field: optional int32 limit = 5;
     */
    limit?: number;
    constructor(data?: PartialMessage<SearchRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.SearchRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest;
    static equals(a: SearchRequest | PlainMessage<SearchRequest> | undefined, b: SearchRequest | PlainMessage<SearchRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.SearchResponse
 */
export declare class SearchResponse extends Message<SearchResponse> {
    /**
     * @generated from field: string search_id = 1;
     */
    searchId: string;
    /**
     * @generated from field: repeated index.v1.SearchResponse.Match matches = 2;
     */
    matches: SearchResponse_Match[];
    /**
     * @generated from field: map<string, index.v1.Object> objects = 3;
     */
    objects: {
        [key: string]: Object$;
    };
    constructor(data?: PartialMessage<SearchResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.SearchResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchResponse;
    static equals(a: SearchResponse | PlainMessage<SearchResponse> | undefined, b: SearchResponse | PlainMessage<SearchResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.SearchResponse.Match
 */
export declare class SearchResponse_Match extends Message<SearchResponse_Match> {
    /**
     * @generated from field: string match_id = 1;
     */
    matchId: string;
    /**
     * @generated from field: string object_id = 2;
     */
    objectId: string;
    /**
     * @generated from field: string content = 3;
     */
    content: string;
    /**
     * @generated from field: float score = 4;
     */
    score: number;
    /**
     * @generated from field: optional index.v1.Properties extra = 5;
     */
    extra?: Properties;
    constructor(data?: PartialMessage<SearchResponse_Match>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.SearchResponse.Match";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchResponse_Match;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchResponse_Match;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchResponse_Match;
    static equals(a: SearchResponse_Match | PlainMessage<SearchResponse_Match> | undefined, b: SearchResponse_Match | PlainMessage<SearchResponse_Match> | undefined): boolean;
}
/**
 * @generated from message index.v1.AnswerRequest
 */
export declare class AnswerRequest extends Message<AnswerRequest> {
    /**
     * @generated from field: string query = 1;
     */
    query: string;
    /**
     * @generated from field: repeated string roots = 2;
     */
    roots: string[];
    /**
     * @generated from field: optional string session_id = 3;
     */
    sessionId?: string;
    /**
     * @generated from field: optional index.v1.Filter filter = 4;
     */
    filter?: Filter;
    constructor(data?: PartialMessage<AnswerRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.AnswerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerRequest;
    static equals(a: AnswerRequest | PlainMessage<AnswerRequest> | undefined, b: AnswerRequest | PlainMessage<AnswerRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.AnswerResponse
 */
export declare class AnswerResponse extends Message<AnswerResponse> {
    /**
     * @generated from field: string answer_id = 1;
     */
    answerId: string;
    /**
     * @generated from field: string answer = 2;
     */
    answer: string;
    /**
     * @generated from field: float confidence = 3;
     */
    confidence: number;
    /**
     * @generated from field: repeated index.v1.Object sources = 4;
     */
    sources: Object$[];
    constructor(data?: PartialMessage<AnswerResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.AnswerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerResponse;
    static equals(a: AnswerResponse | PlainMessage<AnswerResponse> | undefined, b: AnswerResponse | PlainMessage<AnswerResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.SearchFeedback
 */
export declare class SearchFeedback extends Message<SearchFeedback> {
    /**
     * @generated from field: string search_id = 1;
     */
    searchId: string;
    /**
     * @generated from field: string clicked_match_id = 2;
     */
    clickedMatchId: string;
    constructor(data?: PartialMessage<SearchFeedback>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.SearchFeedback";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchFeedback;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchFeedback;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchFeedback;
    static equals(a: SearchFeedback | PlainMessage<SearchFeedback> | undefined, b: SearchFeedback | PlainMessage<SearchFeedback> | undefined): boolean;
}
/**
 * @generated from message index.v1.AnswerFeedback
 */
export declare class AnswerFeedback extends Message<AnswerFeedback> {
    /**
     * @generated from field: string answer_id = 1;
     */
    answerId: string;
    /**
     * @generated from field: bool positive_reaction = 2;
     */
    positiveReaction: boolean;
    constructor(data?: PartialMessage<AnswerFeedback>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.AnswerFeedback";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerFeedback;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerFeedback;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerFeedback;
    static equals(a: AnswerFeedback | PlainMessage<AnswerFeedback> | undefined, b: AnswerFeedback | PlainMessage<AnswerFeedback> | undefined): boolean;
}
/**
 * @generated from message index.v1.FeedbackRequest
 */
export declare class FeedbackRequest extends Message<FeedbackRequest> {
    /**
     * @generated from oneof index.v1.FeedbackRequest.feedback
     */
    feedback: {
        /**
         * @generated from field: index.v1.SearchFeedback search = 1;
         */
        value: SearchFeedback;
        case: "search";
    } | {
        /**
         * @generated from field: index.v1.AnswerFeedback answer = 2;
         */
        value: AnswerFeedback;
        case: "answer";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<FeedbackRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.FeedbackRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeedbackRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeedbackRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeedbackRequest;
    static equals(a: FeedbackRequest | PlainMessage<FeedbackRequest> | undefined, b: FeedbackRequest | PlainMessage<FeedbackRequest> | undefined): boolean;
}
/**
 * @generated from message index.v1.FeedbackResponse
 */
export declare class FeedbackResponse extends Message<FeedbackResponse> {
    constructor(data?: PartialMessage<FeedbackResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.FeedbackResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeedbackResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeedbackResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeedbackResponse;
    static equals(a: FeedbackResponse | PlainMessage<FeedbackResponse> | undefined, b: FeedbackResponse | PlainMessage<FeedbackResponse> | undefined): boolean;
}
/**
 * @generated from message index.v1.ObjectMetadata
 */
export declare class ObjectMetadata extends Message<ObjectMetadata> {
    /**
     * @generated from oneof index.v1.ObjectMetadata.metadata
     */
    metadata: {
        /**
         * @generated from field: index.v1.CollectionObjectMetadata collection = 1;
         */
        value: CollectionObjectMetadata;
        case: "collection";
    } | {
        /**
         * @generated from field: index.v1.TextObjectMetadata text = 2;
         */
        value: TextObjectMetadata;
        case: "text";
    } | {
        /**
         * @generated from field: index.v1.HTMLObjectMetadata html = 3;
         */
        value: HTMLObjectMetadata;
        case: "html";
    } | {
        /**
         * @generated from field: index.v1.ImageObjectMetadata image = 4;
         */
        value: ImageObjectMetadata;
        case: "image";
    } | {
        /**
         * @generated from field: index.v1.PDFObjectMetadata pdf = 5;
         */
        value: PDFObjectMetadata;
        case: "pdf";
    } | {
        /**
         * @generated from field: index.v1.AudioObjectMetadata audio = 6;
         */
        value: AudioObjectMetadata;
        case: "audio";
    } | {
        /**
         * @generated from field: index.v1.SlackObjectMetadata slack = 7;
         */
        value: SlackObjectMetadata;
        case: "slack";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<ObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.ObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectMetadata;
    static equals(a: ObjectMetadata | PlainMessage<ObjectMetadata> | undefined, b: ObjectMetadata | PlainMessage<ObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.CollectionObjectMetadata
 */
export declare class CollectionObjectMetadata extends Message<CollectionObjectMetadata> {
    constructor(data?: PartialMessage<CollectionObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.CollectionObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CollectionObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CollectionObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CollectionObjectMetadata;
    static equals(a: CollectionObjectMetadata | PlainMessage<CollectionObjectMetadata> | undefined, b: CollectionObjectMetadata | PlainMessage<CollectionObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.TextObjectMetadata
 */
export declare class TextObjectMetadata extends Message<TextObjectMetadata> {
    /**
     * @generated from field: string text = 1;
     */
    text: string;
    constructor(data?: PartialMessage<TextObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.TextObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextObjectMetadata;
    static equals(a: TextObjectMetadata | PlainMessage<TextObjectMetadata> | undefined, b: TextObjectMetadata | PlainMessage<TextObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.HTMLObjectMetadata
 */
export declare class HTMLObjectMetadata extends Message<HTMLObjectMetadata> {
    /**
     * @generated from field: optional string html = 1;
     */
    html?: string;
    /**
     * @generated from field: optional string url = 2;
     */
    url?: string;
    constructor(data?: PartialMessage<HTMLObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.HTMLObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTMLObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTMLObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTMLObjectMetadata;
    static equals(a: HTMLObjectMetadata | PlainMessage<HTMLObjectMetadata> | undefined, b: HTMLObjectMetadata | PlainMessage<HTMLObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.ImageObjectMetadata
 */
export declare class ImageObjectMetadata extends Message<ImageObjectMetadata> {
    /**
     * Supports: JPEG/JPG, PNG.
     *
     * @generated from field: string url = 1;
     */
    url: string;
    /**
     * @generated from field: optional string alt = 2;
     */
    alt?: string;
    constructor(data?: PartialMessage<ImageObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.ImageObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageObjectMetadata;
    static equals(a: ImageObjectMetadata | PlainMessage<ImageObjectMetadata> | undefined, b: ImageObjectMetadata | PlainMessage<ImageObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.PDFObjectMetadata
 */
export declare class PDFObjectMetadata extends Message<PDFObjectMetadata> {
    /**
     * @generated from field: string url = 1;
     */
    url: string;
    constructor(data?: PartialMessage<PDFObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.PDFObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PDFObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PDFObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PDFObjectMetadata;
    static equals(a: PDFObjectMetadata | PlainMessage<PDFObjectMetadata> | undefined, b: PDFObjectMetadata | PlainMessage<PDFObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.AudioObjectMetadata
 */
export declare class AudioObjectMetadata extends Message<AudioObjectMetadata> {
    /**
     * @generated from field: string url = 1;
     */
    url: string;
    constructor(data?: PartialMessage<AudioObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.AudioObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioObjectMetadata;
    static equals(a: AudioObjectMetadata | PlainMessage<AudioObjectMetadata> | undefined, b: AudioObjectMetadata | PlainMessage<AudioObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.SlackObjectMetadata
 */
export declare class SlackObjectMetadata extends Message<SlackObjectMetadata> {
    /**
     * @generated from field: string bot_token = 1;
     */
    botToken: string;
    /**
     * Will be set automatically if omitted.
     *
     * @generated from field: optional string bot_user_id = 2;
     */
    botUserId?: string;
    constructor(data?: PartialMessage<SlackObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.SlackObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlackObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlackObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlackObjectMetadata;
    static equals(a: SlackObjectMetadata | PlainMessage<SlackObjectMetadata> | undefined, b: SlackObjectMetadata | PlainMessage<SlackObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message index.v1.Properties
 */
export declare class Properties extends Message<Properties> {
    /**
     * @generated from field: map<string, index.v1.Property> properties = 1;
     */
    properties: {
        [key: string]: Property;
    };
    constructor(data?: PartialMessage<Properties>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Properties";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Properties;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Properties;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Properties;
    static equals(a: Properties | PlainMessage<Properties> | undefined, b: Properties | PlainMessage<Properties> | undefined): boolean;
}
/**
 * @generated from message index.v1.TextArray
 */
export declare class TextArray extends Message<TextArray> {
    /**
     * @generated from field: repeated string values = 1;
     */
    values: string[];
    constructor(data?: PartialMessage<TextArray>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.TextArray";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextArray;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextArray;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextArray;
    static equals(a: TextArray | PlainMessage<TextArray> | undefined, b: TextArray | PlainMessage<TextArray> | undefined): boolean;
}
/**
 * @generated from message index.v1.NumberArray
 */
export declare class NumberArray extends Message<NumberArray> {
    /**
     * @generated from field: repeated double values = 1;
     */
    values: number[];
    constructor(data?: PartialMessage<NumberArray>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.NumberArray";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NumberArray;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NumberArray;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NumberArray;
    static equals(a: NumberArray | PlainMessage<NumberArray> | undefined, b: NumberArray | PlainMessage<NumberArray> | undefined): boolean;
}
/**
 * @generated from message index.v1.Property
 */
export declare class Property extends Message<Property> {
    /**
     * @generated from oneof index.v1.Property.value
     */
    value: {
        /**
         * @generated from field: string text = 2;
         */
        value: string;
        case: "text";
    } | {
        /**
         * @generated from field: double number = 3;
         */
        value: number;
        case: "number";
    } | {
        /**
         * @generated from field: index.v1.TextArray text_array = 4;
         */
        value: TextArray;
        case: "textArray";
    } | {
        /**
         * @generated from field: index.v1.NumberArray number_array = 5;
         */
        value: NumberArray;
        case: "numberArray";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Property>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Property";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Property;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Property;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Property;
    static equals(a: Property | PlainMessage<Property> | undefined, b: Property | PlainMessage<Property> | undefined): boolean;
}
/**
 * @generated from message index.v1.KeyedProperty
 */
export declare class KeyedProperty extends Message<KeyedProperty> {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: index.v1.Property property = 2;
     */
    property?: Property;
    constructor(data?: PartialMessage<KeyedProperty>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.KeyedProperty";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyedProperty;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyedProperty;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyedProperty;
    static equals(a: KeyedProperty | PlainMessage<KeyedProperty> | undefined, b: KeyedProperty | PlainMessage<KeyedProperty> | undefined): boolean;
}
/**
 * @generated from message index.v1.Object
 */
export declare class Object$ extends Message<Object$> {
    /**
     * @generated from field: string id = 1;
     */
    id: string;
    /**
     * @generated from field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from field: optional string parent_id = 4;
     */
    parentId?: string;
    /**
     * @generated from field: index.v1.ObjectType type = 5;
     */
    type: ObjectType;
    /**
     * @generated from field: index.v1.ObjectMetadata metadata = 6;
     */
    metadata?: ObjectMetadata;
    /**
     * @generated from field: index.v1.Properties properties = 7;
     */
    properties?: Properties;
    /**
     * @generated from field: index.v1.ObjectStatus status = 8;
     */
    status: ObjectStatus;
    /**
     * @generated from field: optional string label = 9;
     */
    label?: string;
    constructor(data?: PartialMessage<Object$>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Object";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Object$;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Object$;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Object$;
    static equals(a: Object$ | PlainMessage<Object$> | undefined, b: Object$ | PlainMessage<Object$> | undefined): boolean;
}
/**
 * @generated from message index.v1.Filter
 */
export declare class Filter extends Message<Filter> {
    /**
     * @generated from field: repeated index.v1.Condition conditions = 1;
     */
    conditions: Condition[];
    constructor(data?: PartialMessage<Filter>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Filter";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filter;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filter;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filter;
    static equals(a: Filter | PlainMessage<Filter> | undefined, b: Filter | PlainMessage<Filter> | undefined): boolean;
}
/**
 * @generated from message index.v1.Range
 */
export declare class Range extends Message<Range> {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: optional double lt = 2;
     */
    lt?: number;
    /**
     * @generated from field: optional double lte = 3;
     */
    lte?: number;
    /**
     * @generated from field: optional double gt = 4;
     */
    gt?: number;
    /**
     * @generated from field: optional double gte = 5;
     */
    gte?: number;
    constructor(data?: PartialMessage<Range>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Range";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Range;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Range;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Range;
    static equals(a: Range | PlainMessage<Range> | undefined, b: Range | PlainMessage<Range> | undefined): boolean;
}
/**
 * @generated from message index.v1.Condition
 */
export declare class Condition extends Message<Condition> {
    /**
     * @generated from oneof index.v1.Condition.condition
     */
    condition: {
        /**
         * @generated from field: index.v1.KeyedProperty property = 1;
         */
        value: KeyedProperty;
        case: "property";
    } | {
        /**
         * @generated from field: index.v1.Range range = 2;
         */
        value: Range;
        case: "range";
    } | {
        /**
         * @generated from field: index.v1.Filter and = 3;
         */
        value: Filter;
        case: "and";
    } | {
        /**
         * @generated from field: index.v1.Filter or = 4;
         */
        value: Filter;
        case: "or";
    } | {
        /**
         * @generated from field: index.v1.Filter not = 5;
         */
        value: Filter;
        case: "not";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Condition>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "index.v1.Condition";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition;
    static equals(a: Condition | PlainMessage<Condition> | undefined, b: Condition | PlainMessage<Condition> | undefined): boolean;
}
