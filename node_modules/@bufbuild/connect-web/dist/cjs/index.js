"use strict";
// Copyright 2021-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEnvelopeReadableStream = exports.mergeHeaders = exports.decodeBinaryHeader = exports.encodeBinaryHeader = exports.codeToString = exports.codeFromString = exports.Code = exports.connectErrorFromJson = exports.connectErrorFromReason = exports.connectErrorDetails = exports.ConnectError = exports.runServerStream = exports.runUnary = exports.createGrpcWebTransport = exports.createConnectTransport = exports.makeAnyClient = exports.createPromiseClient = exports.createCallbackClient = void 0;
var callback_client_js_1 = require("./callback-client.js");
Object.defineProperty(exports, "createCallbackClient", { enumerable: true, get: function () { return callback_client_js_1.createCallbackClient; } });
var promise_client_js_1 = require("./promise-client.js");
Object.defineProperty(exports, "createPromiseClient", { enumerable: true, get: function () { return promise_client_js_1.createPromiseClient; } });
var any_client_js_1 = require("./any-client.js");
Object.defineProperty(exports, "makeAnyClient", { enumerable: true, get: function () { return any_client_js_1.makeAnyClient; } });
var connect_transport_js_1 = require("./connect-transport.js");
Object.defineProperty(exports, "createConnectTransport", { enumerable: true, get: function () { return connect_transport_js_1.createConnectTransport; } });
var grpc_web_transport_js_1 = require("./grpc-web-transport.js");
Object.defineProperty(exports, "createGrpcWebTransport", { enumerable: true, get: function () { return grpc_web_transport_js_1.createGrpcWebTransport; } });
var interceptor_js_1 = require("./interceptor.js");
Object.defineProperty(exports, "runUnary", { enumerable: true, get: function () { return interceptor_js_1.runUnary; } });
Object.defineProperty(exports, "runServerStream", { enumerable: true, get: function () { return interceptor_js_1.runServerStream; } });
var connect_error_js_1 = require("./connect-error.js");
Object.defineProperty(exports, "ConnectError", { enumerable: true, get: function () { return connect_error_js_1.ConnectError; } });
Object.defineProperty(exports, "connectErrorDetails", { enumerable: true, get: function () { return connect_error_js_1.connectErrorDetails; } });
Object.defineProperty(exports, "connectErrorFromReason", { enumerable: true, get: function () { return connect_error_js_1.connectErrorFromReason; } });
Object.defineProperty(exports, "connectErrorFromJson", { enumerable: true, get: function () { return connect_error_js_1.connectErrorFromJson; } });
var code_js_1 = require("./code.js");
Object.defineProperty(exports, "Code", { enumerable: true, get: function () { return code_js_1.Code; } });
Object.defineProperty(exports, "codeFromString", { enumerable: true, get: function () { return code_js_1.codeFromString; } });
Object.defineProperty(exports, "codeToString", { enumerable: true, get: function () { return code_js_1.codeToString; } });
var http_headers_js_1 = require("./http-headers.js");
Object.defineProperty(exports, "encodeBinaryHeader", { enumerable: true, get: function () { return http_headers_js_1.encodeBinaryHeader; } });
Object.defineProperty(exports, "decodeBinaryHeader", { enumerable: true, get: function () { return http_headers_js_1.decodeBinaryHeader; } });
Object.defineProperty(exports, "mergeHeaders", { enumerable: true, get: function () { return http_headers_js_1.mergeHeaders; } });
var envelope_js_1 = require("./envelope.js");
Object.defineProperty(exports, "createEnvelopeReadableStream", { enumerable: true, get: function () { return envelope_js_1.createEnvelopeReadableStream; } });
