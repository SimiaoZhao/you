import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, Timestamp } from "@bufbuild/protobuf";
import { Answer, Object$, ObjectOptions, Properties } from "./object_pb.js";
import { Index, IndexOptions } from "./index_pb.js";
/**
 * PaginationParams are the parameters used to paginate a feed.
 *
 * @generated from message operand.v1.PaginationParams
 */
export declare class PaginationParams extends Message<PaginationParams> {
    /**
     * @generated from field: int32 limit = 1;
     */
    limit: number;
    /**
     * @generated from field: optional int32 offset = 2;
     */
    offset?: number;
    /**
     * Latest time is the time to start the feed from. If this is not specified, the feed will start from
     * the most recent object, i.e. the current time. This is important as it helps ensure pagination
     * remains consistent, even if new objects are being indexed as part of the users feed. We expect the
     * caller to periodically "refresh" the feed by adjusting the latest time to the current time and perhaps
     * merging the results with the previously fetched feed.
     *
     * @generated from field: optional google.protobuf.Timestamp latest_time = 3;
     */
    latestTime?: Timestamp;
    constructor(data?: PartialMessage<PaginationParams>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.PaginationParams";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaginationParams;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaginationParams;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaginationParams;
    static equals(a: PaginationParams | PlainMessage<PaginationParams> | undefined, b: PaginationParams | PlainMessage<PaginationParams> | undefined): boolean;
}
/**
 * FeedRequest is the request object for the Feed RPC.
 *
 * @generated from message operand.v1.FeedRequest
 */
export declare class FeedRequest extends Message<FeedRequest> {
    /**
     * If the user doesn't specify a specific index to get the feed from, then we will return a combined
     * feed of all of the indexes that they've subscribed to.
     *
     * @generated from field: optional string specific_index_id = 1;
     */
    specificIndexId?: string;
    /**
     * @generated from field: optional operand.v1.PaginationParams pagination_params = 2;
     */
    paginationParams?: PaginationParams;
    /**
     * @generated from field: optional operand.v1.ObjectOptions object_options = 3;
     */
    objectOptions?: ObjectOptions;
    /**
     * @generated from field: optional operand.v1.IndexOptions index_options = 4;
     */
    indexOptions?: IndexOptions;
    constructor(data?: PartialMessage<FeedRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.FeedRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeedRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeedRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeedRequest;
    static equals(a: FeedRequest | PlainMessage<FeedRequest> | undefined, b: FeedRequest | PlainMessage<FeedRequest> | undefined): boolean;
}
/**
 * FeedResponse is the response object for the Feed RPC.
 *
 * @generated from message operand.v1.FeedResponse
 */
export declare class FeedResponse extends Message<FeedResponse> {
    /**
     * @generated from field: repeated operand.v1.FeedResponse.FeedObject feed_objects = 1;
     */
    feedObjects: FeedResponse_FeedObject[];
    /**
     * @generated from field: map<string, operand.v1.Index> indexes = 2;
     */
    indexes: {
        [key: string]: Index;
    };
    constructor(data?: PartialMessage<FeedResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.FeedResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeedResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeedResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeedResponse;
    static equals(a: FeedResponse | PlainMessage<FeedResponse> | undefined, b: FeedResponse | PlainMessage<FeedResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.FeedResponse.FeedObject
 */
export declare class FeedResponse_FeedObject extends Message<FeedResponse_FeedObject> {
    /**
     * @generated from field: string index_id = 1;
     */
    indexId: string;
    /**
     * @generated from field: operand.v1.Object object = 2;
     */
    object?: Object$;
    constructor(data?: PartialMessage<FeedResponse_FeedObject>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.FeedResponse.FeedObject";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeedResponse_FeedObject;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeedResponse_FeedObject;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeedResponse_FeedObject;
    static equals(a: FeedResponse_FeedObject | PlainMessage<FeedResponse_FeedObject> | undefined, b: FeedResponse_FeedObject | PlainMessage<FeedResponse_FeedObject> | undefined): boolean;
}
/**
 * SearchRequest is the request object for the Search RPC.
 *
 * @generated from message operand.v1.SearchRequest
 */
export declare class SearchRequest extends Message<SearchRequest> {
    /**
     * @generated from field: repeated string index_ids = 1;
     */
    indexIds: string[];
    /**
     * @generated from field: string query = 2;
     */
    query: string;
    /**
     * @generated from field: optional int32 limit = 3;
     */
    limit?: number;
    /**
     * @generated from field: optional bool attempt_answer = 4;
     */
    attemptAnswer?: boolean;
    /**
     * @generated from field: optional operand.v1.ObjectOptions object_options = 5;
     */
    objectOptions?: ObjectOptions;
    /**
     * @generated from field: optional operand.v1.IndexOptions index_options = 6;
     */
    indexOptions?: IndexOptions;
    constructor(data?: PartialMessage<SearchRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.SearchRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest;
    static equals(a: SearchRequest | PlainMessage<SearchRequest> | undefined, b: SearchRequest | PlainMessage<SearchRequest> | undefined): boolean;
}
/**
 * ContentSnippet is a snippet of content taken directly from the content of an object. This is used
 * within search results, as well as to show context for the result of a given operation.
 *
 * @generated from message operand.v1.ContentSnippet
 */
export declare class ContentSnippet extends Message<ContentSnippet> {
    /**
     * @generated from field: string content = 1;
     */
    content: string;
    /**
     * @generated from field: string object_id = 2;
     */
    objectId: string;
    /**
     * @generated from field: string index_id = 3;
     */
    indexId: string;
    /**
     * @generated from field: optional operand.v1.Properties extra = 4;
     */
    extra?: Properties;
    /**
     * @generated from field: float score = 5;
     */
    score: number;
    constructor(data?: PartialMessage<ContentSnippet>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.ContentSnippet";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentSnippet;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentSnippet;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentSnippet;
    static equals(a: ContentSnippet | PlainMessage<ContentSnippet> | undefined, b: ContentSnippet | PlainMessage<ContentSnippet> | undefined): boolean;
}
/**
 * SearchResponse is the response object for the Search RPC.
 *
 * @generated from message operand.v1.SearchResponse
 */
export declare class SearchResponse extends Message<SearchResponse> {
    /**
     * @generated from field: repeated operand.v1.ContentSnippet results = 1;
     */
    results: ContentSnippet[];
    /**
     * @generated from field: map<string, operand.v1.Object> objects = 2;
     */
    objects: {
        [key: string]: Object$;
    };
    /**
     * @generated from field: map<string, operand.v1.Index> indexes = 3;
     */
    indexes: {
        [key: string]: Index;
    };
    /**
     * @generated from field: optional operand.v1.Answer answer = 4;
     */
    answer?: Answer;
    constructor(data?: PartialMessage<SearchResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.SearchResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchResponse;
    static equals(a: SearchResponse | PlainMessage<SearchResponse> | undefined, b: SearchResponse | PlainMessage<SearchResponse> | undefined): boolean;
}
/**
 * PublicIndexesRequest is the request object for the PublicIndexes RPC.
 *
 * @generated from message operand.v1.PublicIndexesRequest
 */
export declare class PublicIndexesRequest extends Message<PublicIndexesRequest> {
    /**
     * @generated from field: optional string query = 1;
     */
    query?: string;
    /**
     * @generated from field: optional int32 limit = 2;
     */
    limit?: number;
    /**
     * @generated from field: optional operand.v1.IndexOptions index_options = 3;
     */
    indexOptions?: IndexOptions;
    constructor(data?: PartialMessage<PublicIndexesRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.PublicIndexesRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicIndexesRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicIndexesRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicIndexesRequest;
    static equals(a: PublicIndexesRequest | PlainMessage<PublicIndexesRequest> | undefined, b: PublicIndexesRequest | PlainMessage<PublicIndexesRequest> | undefined): boolean;
}
/**
 * PublicIndexesResponse is the response object for the PublicIndexes RPC.
 *
 * @generated from message operand.v1.PublicIndexesResponse
 */
export declare class PublicIndexesResponse extends Message<PublicIndexesResponse> {
    /**
     * @generated from field: repeated operand.v1.Index indexes = 1;
     */
    indexes: Index[];
    constructor(data?: PartialMessage<PublicIndexesResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime.js").ProtoRuntime;
    static readonly typeName = "operand.v1.PublicIndexesResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicIndexesResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicIndexesResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicIndexesResponse;
    static equals(a: PublicIndexesResponse | PlainMessage<PublicIndexesResponse> | undefined, b: PublicIndexesResponse | PlainMessage<PublicIndexesResponse> | undefined): boolean;
}
