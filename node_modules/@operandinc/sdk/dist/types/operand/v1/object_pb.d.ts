import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, Timestamp } from "@bufbuild/protobuf";
/**
 * @generated from enum operand.v1.ObjectType
 */
export declare enum ObjectType {
    /**
     * @generated from enum value: OBJECT_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: OBJECT_TYPE_COLLECTION = 1;
     */
    COLLECTION = 1,
    /**
     * @generated from enum value: OBJECT_TYPE_TEXT = 2;
     */
    TEXT = 2,
    /**
     * @generated from enum value: OBJECT_TYPE_HTML = 3;
     */
    HTML = 3,
    /**
     * @generated from enum value: OBJECT_TYPE_RSS = 4;
     */
    RSS = 4,
    /**
     * @generated from enum value: OBJECT_TYPE_AUDIO = 5;
     */
    AUDIO = 5,
    /**
     * @generated from enum value: OBJECT_TYPE_PODCAST = 6;
     */
    PODCAST = 6,
    /**
     * @generated from enum value: OBJECT_TYPE_SITEMAP = 7;
     */
    SITEMAP = 7,
    /**
     * @generated from enum value: OBJECT_TYPE_PDF = 8;
     */
    PDF = 8,
    /**
     * @generated from enum value: OBJECT_TYPE_EPUB = 9;
     */
    EPUB = 9,
    /**
     * @generated from enum value: OBJECT_TYPE_YOUTUBE = 10;
     */
    YOUTUBE = 10,
    /**
     * @generated from enum value: OBJECT_TYPE_MARKDOWN = 11;
     */
    MARKDOWN = 11,
    /**
     * @generated from enum value: OBJECT_TYPE_SLACK = 12;
     */
    SLACK = 12,
    /**
     * @generated from enum value: OBJECT_TYPE_GITHUB_REPOSITORY = 13;
     */
    GITHUB_REPOSITORY = 13,
    /**
     * @generated from enum value: OBJECT_TYPE_SOURCE_CODE = 14;
     */
    SOURCE_CODE = 14,
    /**
     * @generated from enum value: OBJECT_TYPE_NOTION = 15;
     */
    NOTION = 15,
    /**
     * @generated from enum value: OBJECT_TYPE_DISCORD = 16;
     */
    DISCORD = 16,
    /**
     * @generated from enum value: OBJECT_TYPE_LINEAR = 17;
     */
    LINEAR = 17,
    /**
     * @generated from enum value: OBJECT_TYPE_MEETING_BOT = 18;
     */
    MEETING_BOT = 18
}
/**
 * @generated from enum operand.v1.AudioFileExt
 */
export declare enum AudioFileExt {
    /**
     * @generated from enum value: AUDIO_FILE_EXT_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: AUDIO_FILE_EXT_MP3 = 1;
     */
    MP3 = 1,
    /**
     * @generated from enum value: AUDIO_FILE_EXT_OGG = 2;
     */
    OGG = 2,
    /**
     * @generated from enum value: AUDIO_FILE_EXT_FLAC = 3;
     */
    FLAC = 3,
    /**
     * @generated from enum value: AUDIO_FILE_EXT_WAV = 4;
     */
    WAV = 4,
    /**
     * @generated from enum value: AUDIO_FILE_EXT_MP4 = 5;
     */
    MP4 = 5
}
/**
 * @generated from enum operand.v1.ProgrammingLanguage
 */
export declare enum ProgrammingLanguage {
    /**
     * @generated from enum value: PROGRAMMING_LANGUAGE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: PROGRAMMING_LANGUAGE_GO = 1;
     */
    GO = 1,
    /**
     * @generated from enum value: PROGRAMMING_LANGUAGE_PYTHON = 2;
     */
    PYTHON = 2
}
/**
 * @generated from enum operand.v1.ObjectStatus
 */
export declare enum ObjectStatus {
    /**
     * @generated from enum value: OBJECT_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: OBJECT_STATUS_QUEUED = 1;
     */
    QUEUED = 1,
    /**
     * @generated from enum value: OBJECT_STATUS_INDEXING = 2;
     */
    INDEXING = 2,
    /**
     * @generated from enum value: OBJECT_STATUS_READY = 3;
     */
    READY = 3,
    /**
     * @generated from enum value: OBJECT_STATUS_ERROR = 4;
     */
    ERROR = 4
}
/**
 * @generated from message operand.v1.ObjectMetadata
 */
export declare class ObjectMetadata extends Message<ObjectMetadata> {
    /**
     * @generated from oneof operand.v1.ObjectMetadata.value
     */
    value: {
        /**
         * @generated from field: operand.v1.CollectionMetadata collection = 1;
         */
        value: CollectionMetadata;
        case: "collection";
    } | {
        /**
         * @generated from field: operand.v1.TextMetadata text = 2;
         */
        value: TextMetadata;
        case: "text";
    } | {
        /**
         * @generated from field: operand.v1.HTMLMetadata html = 3;
         */
        value: HTMLMetadata;
        case: "html";
    } | {
        /**
         * @generated from field: operand.v1.RSSMetadata rss = 4;
         */
        value: RSSMetadata;
        case: "rss";
    } | {
        /**
         * @generated from field: operand.v1.AudioMetadata audio = 5;
         */
        value: AudioMetadata;
        case: "audio";
    } | {
        /**
         * @generated from field: operand.v1.PodcastMetadata podcast = 6;
         */
        value: PodcastMetadata;
        case: "podcast";
    } | {
        /**
         * @generated from field: operand.v1.SitemapMetadata sitemap = 7;
         */
        value: SitemapMetadata;
        case: "sitemap";
    } | {
        /**
         * @generated from field: operand.v1.PDFMetadata pdf = 8;
         */
        value: PDFMetadata;
        case: "pdf";
    } | {
        /**
         * @generated from field: operand.v1.EPUBMetadata epub = 9;
         */
        value: EPUBMetadata;
        case: "epub";
    } | {
        /**
         * @generated from field: operand.v1.YouTubeMetadata youtube = 10;
         */
        value: YouTubeMetadata;
        case: "youtube";
    } | {
        /**
         * @generated from field: operand.v1.MarkdownMetadata markdown = 11;
         */
        value: MarkdownMetadata;
        case: "markdown";
    } | {
        /**
         * @generated from field: operand.v1.SlackMetadata slack = 12;
         */
        value: SlackMetadata;
        case: "slack";
    } | {
        /**
         * @generated from field: operand.v1.GithubRepositoryMetadata github = 13;
         */
        value: GithubRepositoryMetadata;
        case: "github";
    } | {
        /**
         * @generated from field: operand.v1.SourceCodeMetadata source_code = 14;
         */
        value: SourceCodeMetadata;
        case: "sourceCode";
    } | {
        /**
         * @generated from field: operand.v1.NotionMetadata notion = 15;
         */
        value: NotionMetadata;
        case: "notion";
    } | {
        /**
         * @generated from field: operand.v1.DiscordMetadata discord = 16;
         */
        value: DiscordMetadata;
        case: "discord";
    } | {
        /**
         * @generated from field: operand.v1.LinearMetadata linear = 17;
         */
        value: LinearMetadata;
        case: "linear";
    } | {
        /**
         * @generated from field: operand.v1.MeetingBotMetadata meeting_bot = 18;
         */
        value: MeetingBotMetadata;
        case: "meetingBot";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<ObjectMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.ObjectMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectMetadata;
    static equals(a: ObjectMetadata | PlainMessage<ObjectMetadata> | undefined, b: ObjectMetadata | PlainMessage<ObjectMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.CollectionMetadata
 */
export declare class CollectionMetadata extends Message<CollectionMetadata> {
    constructor(data?: PartialMessage<CollectionMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.CollectionMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CollectionMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CollectionMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CollectionMetadata;
    static equals(a: CollectionMetadata | PlainMessage<CollectionMetadata> | undefined, b: CollectionMetadata | PlainMessage<CollectionMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.TextMetadata
 */
export declare class TextMetadata extends Message<TextMetadata> {
    /**
     * @generated from field: string text = 1;
     */
    text: string;
    constructor(data?: PartialMessage<TextMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.TextMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextMetadata;
    static equals(a: TextMetadata | PlainMessage<TextMetadata> | undefined, b: TextMetadata | PlainMessage<TextMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.HTMLMetadata
 */
export declare class HTMLMetadata extends Message<HTMLMetadata> {
    /**
     * @generated from field: optional string html = 1;
     */
    html?: string;
    constructor(data?: PartialMessage<HTMLMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.HTMLMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTMLMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTMLMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTMLMetadata;
    static equals(a: HTMLMetadata | PlainMessage<HTMLMetadata> | undefined, b: HTMLMetadata | PlainMessage<HTMLMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.MarkdownMetadata
 */
export declare class MarkdownMetadata extends Message<MarkdownMetadata> {
    /**
     * @generated from field: optional string markdown = 1;
     */
    markdown?: string;
    constructor(data?: PartialMessage<MarkdownMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.MarkdownMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MarkdownMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MarkdownMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MarkdownMetadata;
    static equals(a: MarkdownMetadata | PlainMessage<MarkdownMetadata> | undefined, b: MarkdownMetadata | PlainMessage<MarkdownMetadata> | undefined): boolean;
}
/**
 * The URL is stored in properties, not here.
 *
 * @generated from message operand.v1.RSSMetadata
 */
export declare class RSSMetadata extends Message<RSSMetadata> {
    constructor(data?: PartialMessage<RSSMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.RSSMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RSSMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RSSMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RSSMetadata;
    static equals(a: RSSMetadata | PlainMessage<RSSMetadata> | undefined, b: RSSMetadata | PlainMessage<RSSMetadata> | undefined): boolean;
}
/**
 * If the _url property is set, this metadata is auto-populated.
 *
 * @generated from message operand.v1.AudioMetadata
 */
export declare class AudioMetadata extends Message<AudioMetadata> {
    /**
     * @generated from field: optional operand.v1.AudioFileExt file_ext = 1;
     */
    fileExt?: AudioFileExt;
    /**
     * @generated from field: optional bytes audio = 2;
     */
    audio?: Uint8Array;
    constructor(data?: PartialMessage<AudioMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.AudioMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AudioMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AudioMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AudioMetadata;
    static equals(a: AudioMetadata | PlainMessage<AudioMetadata> | undefined, b: AudioMetadata | PlainMessage<AudioMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.PodcastMetadata
 */
export declare class PodcastMetadata extends Message<PodcastMetadata> {
    /**
     * @generated from field: string listennotes_id = 1;
     */
    listennotesId: string;
    constructor(data?: PartialMessage<PodcastMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.PodcastMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PodcastMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PodcastMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PodcastMetadata;
    static equals(a: PodcastMetadata | PlainMessage<PodcastMetadata> | undefined, b: PodcastMetadata | PlainMessage<PodcastMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SitemapMetadata
 */
export declare class SitemapMetadata extends Message<SitemapMetadata> {
    /**
     * The URL is stored in properties, not here.
     *
     * @generated from field: optional string url_regex = 1;
     */
    urlRegex?: string;
    constructor(data?: PartialMessage<SitemapMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SitemapMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SitemapMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SitemapMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SitemapMetadata;
    static equals(a: SitemapMetadata | PlainMessage<SitemapMetadata> | undefined, b: SitemapMetadata | PlainMessage<SitemapMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.PDFMetadata
 */
export declare class PDFMetadata extends Message<PDFMetadata> {
    /**
     * @generated from field: optional bytes pdf = 1;
     */
    pdf?: Uint8Array;
    constructor(data?: PartialMessage<PDFMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.PDFMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PDFMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PDFMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PDFMetadata;
    static equals(a: PDFMetadata | PlainMessage<PDFMetadata> | undefined, b: PDFMetadata | PlainMessage<PDFMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.EPUBMetadata
 */
export declare class EPUBMetadata extends Message<EPUBMetadata> {
    /**
     * @generated from field: optional bytes epub = 1;
     */
    epub?: Uint8Array;
    constructor(data?: PartialMessage<EPUBMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.EPUBMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EPUBMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EPUBMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EPUBMetadata;
    static equals(a: EPUBMetadata | PlainMessage<EPUBMetadata> | undefined, b: EPUBMetadata | PlainMessage<EPUBMetadata> | undefined): boolean;
}
/**
 * The URL is stored in properties, not here.
 *
 * @generated from message operand.v1.YouTubeMetadata
 */
export declare class YouTubeMetadata extends Message<YouTubeMetadata> {
    constructor(data?: PartialMessage<YouTubeMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.YouTubeMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): YouTubeMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): YouTubeMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): YouTubeMetadata;
    static equals(a: YouTubeMetadata | PlainMessage<YouTubeMetadata> | undefined, b: YouTubeMetadata | PlainMessage<YouTubeMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SlackMetadata
 */
export declare class SlackMetadata extends Message<SlackMetadata> {
    /**
     * @generated from field: string bot_token = 1;
     */
    botToken: string;
    /**
     * Will be set automatically.
     *
     * @generated from field: optional string bot_user_id = 2;
     */
    botUserId?: string;
    constructor(data?: PartialMessage<SlackMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SlackMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlackMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlackMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlackMetadata;
    static equals(a: SlackMetadata | PlainMessage<SlackMetadata> | undefined, b: SlackMetadata | PlainMessage<SlackMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.GithubRepositoryMetadata
 */
export declare class GithubRepositoryMetadata extends Message<GithubRepositoryMetadata> {
    /**
     * @generated from field: string access_token = 1;
     */
    accessToken: string;
    /**
     * @generated from field: string owner = 2;
     */
    owner: string;
    /**
     * @generated from field: string name = 3;
     */
    name: string;
    /**
     * @generated from field: optional string ref = 4;
     */
    ref?: string;
    constructor(data?: PartialMessage<GithubRepositoryMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.GithubRepositoryMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GithubRepositoryMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GithubRepositoryMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GithubRepositoryMetadata;
    static equals(a: GithubRepositoryMetadata | PlainMessage<GithubRepositoryMetadata> | undefined, b: GithubRepositoryMetadata | PlainMessage<GithubRepositoryMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SourceCodeMetadata
 */
export declare class SourceCodeMetadata extends Message<SourceCodeMetadata> {
    /**
     * @generated from field: operand.v1.ProgrammingLanguage language = 1;
     */
    language: ProgrammingLanguage;
    /**
     * @generated from field: string source_code = 2;
     */
    sourceCode: string;
    constructor(data?: PartialMessage<SourceCodeMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SourceCodeMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceCodeMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceCodeMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceCodeMetadata;
    static equals(a: SourceCodeMetadata | PlainMessage<SourceCodeMetadata> | undefined, b: SourceCodeMetadata | PlainMessage<SourceCodeMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.NotionMetadata
 */
export declare class NotionMetadata extends Message<NotionMetadata> {
    /**
     * @generated from field: string token = 1;
     */
    token: string;
    constructor(data?: PartialMessage<NotionMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.NotionMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotionMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotionMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotionMetadata;
    static equals(a: NotionMetadata | PlainMessage<NotionMetadata> | undefined, b: NotionMetadata | PlainMessage<NotionMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.DiscordMetadata
 */
export declare class DiscordMetadata extends Message<DiscordMetadata> {
    /**
     * @generated from field: string guild_id = 1;
     */
    guildId: string;
    constructor(data?: PartialMessage<DiscordMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.DiscordMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiscordMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiscordMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiscordMetadata;
    static equals(a: DiscordMetadata | PlainMessage<DiscordMetadata> | undefined, b: DiscordMetadata | PlainMessage<DiscordMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.LinearMetadata
 */
export declare class LinearMetadata extends Message<LinearMetadata> {
    /**
     * @generated from field: string access_token = 1;
     */
    accessToken: string;
    constructor(data?: PartialMessage<LinearMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.LinearMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinearMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinearMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinearMetadata;
    static equals(a: LinearMetadata | PlainMessage<LinearMetadata> | undefined, b: LinearMetadata | PlainMessage<LinearMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.MeetingBotMetadata
 */
export declare class MeetingBotMetadata extends Message<MeetingBotMetadata> {
    constructor(data?: PartialMessage<MeetingBotMetadata>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.MeetingBotMetadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeetingBotMetadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeetingBotMetadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeetingBotMetadata;
    static equals(a: MeetingBotMetadata | PlainMessage<MeetingBotMetadata> | undefined, b: MeetingBotMetadata | PlainMessage<MeetingBotMetadata> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Properties
 */
export declare class Properties extends Message<Properties> {
    /**
     * @generated from field: map<string, operand.v1.Property> properties = 1;
     */
    properties: {
        [key: string]: Property;
    };
    constructor(data?: PartialMessage<Properties>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Properties";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Properties;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Properties;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Properties;
    static equals(a: Properties | PlainMessage<Properties> | undefined, b: Properties | PlainMessage<Properties> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Property
 */
export declare class Property extends Message<Property> {
    /**
     * @generated from field: bool indexed = 1;
     */
    indexed: boolean;
    /**
     * @generated from oneof operand.v1.Property.value
     */
    value: {
        /**
         * @generated from field: string text = 2;
         */
        value: string;
        case: "text";
    } | {
        /**
         * @generated from field: double number = 3;
         */
        value: number;
        case: "number";
    } | {
        /**
         * @generated from field: operand.v1.TextArray text_array = 4;
         */
        value: TextArray;
        case: "textArray";
    } | {
        /**
         * @generated from field: operand.v1.NumberArray number_array = 5;
         */
        value: NumberArray;
        case: "numberArray";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Property>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Property";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Property;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Property;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Property;
    static equals(a: Property | PlainMessage<Property> | undefined, b: Property | PlainMessage<Property> | undefined): boolean;
}
/**
 * @generated from message operand.v1.TextArray
 */
export declare class TextArray extends Message<TextArray> {
    /**
     * @generated from field: repeated string values = 1;
     */
    values: string[];
    constructor(data?: PartialMessage<TextArray>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.TextArray";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextArray;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextArray;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextArray;
    static equals(a: TextArray | PlainMessage<TextArray> | undefined, b: TextArray | PlainMessage<TextArray> | undefined): boolean;
}
/**
 * @generated from message operand.v1.NumberArray
 */
export declare class NumberArray extends Message<NumberArray> {
    /**
     * @generated from field: repeated double values = 1;
     */
    values: number[];
    constructor(data?: PartialMessage<NumberArray>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.NumberArray";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NumberArray;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NumberArray;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NumberArray;
    static equals(a: NumberArray | PlainMessage<NumberArray> | undefined, b: NumberArray | PlainMessage<NumberArray> | undefined): boolean;
}
/**
 * @generated from message operand.v1.UserProfile
 */
export declare class UserProfile extends Message<UserProfile> {
    /**
     * @generated from field: string public_id = 1;
     */
    publicId: string;
    /**
     * Only present if the user is the current user, i.e. authenticated.
     *
     * @generated from field: optional string email = 2;
     */
    email?: string;
    /**
     * @generated from field: optional string handle = 3;
     */
    handle?: string;
    /**
     * @generated from field: google.protobuf.Timestamp created_at = 4;
     */
    createdAt?: Timestamp;
    /**
     * @generated from field: optional string name = 5;
     */
    name?: string;
    /**
     * @generated from field: optional string bio = 6;
     */
    bio?: string;
    /**
     * @generated from field: optional string avatar_url = 7;
     */
    avatarUrl?: string;
    constructor(data?: PartialMessage<UserProfile>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.UserProfile";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserProfile;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserProfile;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserProfile;
    static equals(a: UserProfile | PlainMessage<UserProfile> | undefined, b: UserProfile | PlainMessage<UserProfile> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Author
 */
export declare class Author extends Message<Author> {
    /**
     * @generated from oneof operand.v1.Author.author
     */
    author: {
        /**
         * @generated from field: operand.v1.UserProfile profile = 1;
         */
        value: UserProfile;
        case: "profile";
    } | {
        /**
         * @generated from field: string email = 2;
         */
        value: string;
        case: "email";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Author>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Author";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Author;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Author;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Author;
    static equals(a: Author | PlainMessage<Author> | undefined, b: Author | PlainMessage<Author> | undefined): boolean;
}
/**
 * @generated from message operand.v1.ObjectPreview
 */
export declare class ObjectPreview extends Message<ObjectPreview> {
    /**
     * @generated from field: optional string title = 1;
     */
    title?: string;
    /**
     * @generated from field: optional string description = 2;
     */
    description?: string;
    /**
     * @generated from field: optional string image = 3;
     */
    image?: string;
    /**
     * @generated from field: optional string url = 4;
     */
    url?: string;
    /**
     * @generated from field: repeated operand.v1.Author authors = 5;
     */
    authors: Author[];
    constructor(data?: PartialMessage<ObjectPreview>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.ObjectPreview";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectPreview;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectPreview;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectPreview;
    static equals(a: ObjectPreview | PlainMessage<ObjectPreview> | undefined, b: ObjectPreview | PlainMessage<ObjectPreview> | undefined): boolean;
}
/**
 * @generated from message operand.v1.IndexingProgress
 */
export declare class IndexingProgress extends Message<IndexingProgress> {
    /**
     * 0.0 - 1.0
     *
     * @generated from field: float percent_ready = 1;
     */
    percentReady: number;
    /**
     * @generated from field: map<string, int32> status_counts = 2;
     */
    statusCounts: {
        [key: string]: number;
    };
    constructor(data?: PartialMessage<IndexingProgress>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.IndexingProgress";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IndexingProgress;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IndexingProgress;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IndexingProgress;
    static equals(a: IndexingProgress | PlainMessage<IndexingProgress> | undefined, b: IndexingProgress | PlainMessage<IndexingProgress> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Object
 */
export declare class Object$ extends Message<Object$> {
    /**
     * @generated from field: string id = 1;
     */
    id: string;
    /**
     * @generated from field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from field: optional google.protobuf.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from field: optional string parent_id = 4;
     */
    parentId?: string;
    /**
     * @generated from field: operand.v1.ObjectType type = 5;
     */
    type: ObjectType;
    /**
     * @generated from field: optional operand.v1.ObjectMetadata metadata = 6;
     */
    metadata?: ObjectMetadata;
    /**
     * @generated from field: operand.v1.Properties properties = 7;
     */
    properties?: Properties;
    /**
     * @generated from field: operand.v1.ObjectStatus status = 8;
     */
    status: ObjectStatus;
    /**
     * @generated from field: optional operand.v1.ObjectPreview preview = 9;
     */
    preview?: ObjectPreview;
    /**
     * @generated from field: optional operand.v1.IndexingProgress indexing_progress = 10;
     */
    indexingProgress?: IndexingProgress;
    /**
     * @generated from field: optional string error = 11;
     */
    error?: string;
    constructor(data?: PartialMessage<Object$>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Object";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Object$;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Object$;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Object$;
    static equals(a: Object$ | PlainMessage<Object$> | undefined, b: Object$ | PlainMessage<Object$> | undefined): boolean;
}
/**
 * @generated from message operand.v1.ObjectOptions
 */
export declare class ObjectOptions extends Message<ObjectOptions> {
    /**
     * @generated from field: optional bool include_metadata = 1;
     */
    includeMetadata?: boolean;
    /**
     * @generated from field: optional bool include_preview = 2;
     */
    includePreview?: boolean;
    /**
     * @generated from field: optional bool include_indexing_progress = 3;
     */
    includeIndexingProgress?: boolean;
    constructor(data?: PartialMessage<ObjectOptions>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.ObjectOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObjectOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObjectOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObjectOptions;
    static equals(a: ObjectOptions | PlainMessage<ObjectOptions> | undefined, b: ObjectOptions | PlainMessage<ObjectOptions> | undefined): boolean;
}
/**
 * @generated from message operand.v1.UpsertRequest
 */
export declare class UpsertRequest extends Message<UpsertRequest> {
    /**
     * @generated from field: optional string existing_id = 1;
     */
    existingId?: string;
    /**
     * @generated from field: optional string parent_id = 2;
     */
    parentId?: string;
    /**
     * @generated from field: optional operand.v1.ObjectType type = 3;
     */
    type?: ObjectType;
    /**
     * @generated from field: optional operand.v1.ObjectMetadata metadata = 4;
     */
    metadata?: ObjectMetadata;
    /**
     * @generated from field: optional operand.v1.Properties properties = 5;
     */
    properties?: Properties;
    /**
     * If specified, we'll set `existing_id` to any existing object with the same `unique_property`.
     * This is used to deduplicate objects, i.e. by their URL (or some other property which the application
     * considers to be unique).
     *
     * @generated from field: optional string unique_property = 6;
     */
    uniqueProperty?: string;
    constructor(data?: PartialMessage<UpsertRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.UpsertRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertRequest;
    static equals(a: UpsertRequest | PlainMessage<UpsertRequest> | undefined, b: UpsertRequest | PlainMessage<UpsertRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.UpsertResponse
 */
export declare class UpsertResponse extends Message<UpsertResponse> {
    /**
     * @generated from field: operand.v1.Object object = 1;
     */
    object?: Object$;
    constructor(data?: PartialMessage<UpsertResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.UpsertResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertResponse;
    static equals(a: UpsertResponse | PlainMessage<UpsertResponse> | undefined, b: UpsertResponse | PlainMessage<UpsertResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SuggestionsRequest
 */
export declare class SuggestionsRequest extends Message<SuggestionsRequest> {
    /**
     * @generated from field: string query = 1;
     */
    query: string;
    /**
     * @generated from field: optional operand.v1.ObjectType type = 2;
     */
    type?: ObjectType;
    constructor(data?: PartialMessage<SuggestionsRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SuggestionsRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionsRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionsRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionsRequest;
    static equals(a: SuggestionsRequest | PlainMessage<SuggestionsRequest> | undefined, b: SuggestionsRequest | PlainMessage<SuggestionsRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SuggestionsResponse
 */
export declare class SuggestionsResponse extends Message<SuggestionsResponse> {
    /**
     * @generated from field: repeated operand.v1.SuggestionsResponse.AnnotatedUpsert upserts = 1;
     */
    upserts: SuggestionsResponse_AnnotatedUpsert[];
    constructor(data?: PartialMessage<SuggestionsResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SuggestionsResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionsResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionsResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionsResponse;
    static equals(a: SuggestionsResponse | PlainMessage<SuggestionsResponse> | undefined, b: SuggestionsResponse | PlainMessage<SuggestionsResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SuggestionsResponse.AnnotatedUpsert
 */
export declare class SuggestionsResponse_AnnotatedUpsert extends Message<SuggestionsResponse_AnnotatedUpsert> {
    /**
     * @generated from field: operand.v1.UpsertRequest upsert = 1;
     */
    upsert?: UpsertRequest;
    /**
     * @generated from field: string description = 2;
     */
    description: string;
    /**
     * @generated from field: optional int32 page_estimate = 3;
     */
    pageEstimate?: number;
    constructor(data?: PartialMessage<SuggestionsResponse_AnnotatedUpsert>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SuggestionsResponse.AnnotatedUpsert";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuggestionsResponse_AnnotatedUpsert;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuggestionsResponse_AnnotatedUpsert;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuggestionsResponse_AnnotatedUpsert;
    static equals(a: SuggestionsResponse_AnnotatedUpsert | PlainMessage<SuggestionsResponse_AnnotatedUpsert> | undefined, b: SuggestionsResponse_AnnotatedUpsert | PlainMessage<SuggestionsResponse_AnnotatedUpsert> | undefined): boolean;
}
/**
 * @generated from message operand.v1.ListRequest
 */
export declare class ListRequest extends Message<ListRequest> {
    /**
     * @generated from field: optional string parent_id = 1;
     */
    parentId?: string;
    /**
     * @generated from field: optional string cursor = 2;
     */
    cursor?: string;
    /**
     * @generated from field: optional int32 limit = 3;
     */
    limit?: number;
    /**
     * @generated from field: optional operand.v1.ObjectOptions options = 4;
     */
    options?: ObjectOptions;
    constructor(data?: PartialMessage<ListRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.ListRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRequest;
    static equals(a: ListRequest | PlainMessage<ListRequest> | undefined, b: ListRequest | PlainMessage<ListRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.ListResponse
 */
export declare class ListResponse extends Message<ListResponse> {
    /**
     * @generated from field: repeated operand.v1.Object objects = 1;
     */
    objects: Object$[];
    /**
     * @generated from field: optional string next_cursor = 2;
     */
    nextCursor?: string;
    constructor(data?: PartialMessage<ListResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.ListResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListResponse;
    static equals(a: ListResponse | PlainMessage<ListResponse> | undefined, b: ListResponse | PlainMessage<ListResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.GetRequest
 */
export declare class GetRequest extends Message<GetRequest> {
    /**
     * @generated from field: repeated string ids = 1;
     */
    ids: string[];
    /**
     * @generated from field: optional operand.v1.ObjectOptions options = 2;
     */
    options?: ObjectOptions;
    constructor(data?: PartialMessage<GetRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.GetRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRequest;
    static equals(a: GetRequest | PlainMessage<GetRequest> | undefined, b: GetRequest | PlainMessage<GetRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.GetResponse
 */
export declare class GetResponse extends Message<GetResponse> {
    /**
     * @generated from field: repeated operand.v1.Object objects = 1;
     */
    objects: Object$[];
    constructor(data?: PartialMessage<GetResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.GetResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetResponse;
    static equals(a: GetResponse | PlainMessage<GetResponse> | undefined, b: GetResponse | PlainMessage<GetResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.DeleteRequest
 */
export declare class DeleteRequest extends Message<DeleteRequest> {
    /**
     * @generated from field: repeated string ids = 1;
     */
    ids: string[];
    constructor(data?: PartialMessage<DeleteRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.DeleteRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRequest;
    static equals(a: DeleteRequest | PlainMessage<DeleteRequest> | undefined, b: DeleteRequest | PlainMessage<DeleteRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.DeleteResponse
 */
export declare class DeleteResponse extends Message<DeleteResponse> {
    constructor(data?: PartialMessage<DeleteResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.DeleteResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResponse;
    static equals(a: DeleteResponse | PlainMessage<DeleteResponse> | undefined, b: DeleteResponse | PlainMessage<DeleteResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.CountRequest
 */
export declare class CountRequest extends Message<CountRequest> {
    /**
     * @generated from field: optional string parent_id = 1;
     */
    parentId?: string;
    constructor(data?: PartialMessage<CountRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.CountRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountRequest;
    static equals(a: CountRequest | PlainMessage<CountRequest> | undefined, b: CountRequest | PlainMessage<CountRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.CountResponse
 */
export declare class CountResponse extends Message<CountResponse> {
    /**
     * @generated from field: int32 count = 1;
     */
    count: number;
    constructor(data?: PartialMessage<CountResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.CountResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CountResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CountResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CountResponse;
    static equals(a: CountResponse | PlainMessage<CountResponse> | undefined, b: CountResponse | PlainMessage<CountResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Filter
 */
export declare class Filter extends Message<Filter> {
    /**
     * @generated from field: repeated operand.v1.Condition conditions = 1;
     */
    conditions: Condition[];
    constructor(data?: PartialMessage<Filter>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Filter";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Filter;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Filter;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Filter;
    static equals(a: Filter | PlainMessage<Filter> | undefined, b: Filter | PlainMessage<Filter> | undefined): boolean;
}
/**
 * @generated from message operand.v1.NotCondition
 */
export declare class NotCondition extends Message<NotCondition> {
    /**
     * @generated from field: operand.v1.Condition condition = 1;
     */
    condition?: Condition;
    constructor(data?: PartialMessage<NotCondition>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.NotCondition";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotCondition;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotCondition;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotCondition;
    static equals(a: NotCondition | PlainMessage<NotCondition> | undefined, b: NotCondition | PlainMessage<NotCondition> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Condition
 */
export declare class Condition extends Message<Condition> {
    /**
     * @generated from oneof operand.v1.Condition.condition
     */
    condition: {
        /**
         * @generated from field: operand.v1.KeyedProperty property = 1;
         */
        value: KeyedProperty;
        case: "property";
    } | {
        /**
         * @generated from field: operand.v1.Range range = 2;
         */
        value: Range;
        case: "range";
    } | {
        /**
         * @generated from field: operand.v1.Filter and = 3;
         */
        value: Filter;
        case: "and";
    } | {
        /**
         * @generated from field: operand.v1.Filter or = 4;
         */
        value: Filter;
        case: "or";
    } | {
        /**
         * @generated from field: operand.v1.NotCondition not = 5;
         */
        value: NotCondition;
        case: "not";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Condition>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Condition";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition;
    static equals(a: Condition | PlainMessage<Condition> | undefined, b: Condition | PlainMessage<Condition> | undefined): boolean;
}
/**
 * @generated from message operand.v1.KeyedProperty
 */
export declare class KeyedProperty extends Message<KeyedProperty> {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: operand.v1.Property property = 2;
     */
    property?: Property;
    constructor(data?: PartialMessage<KeyedProperty>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.KeyedProperty";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyedProperty;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyedProperty;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyedProperty;
    static equals(a: KeyedProperty | PlainMessage<KeyedProperty> | undefined, b: KeyedProperty | PlainMessage<KeyedProperty> | undefined): boolean;
}
/**
 * @generated from message operand.v1.Range
 */
export declare class Range extends Message<Range> {
    /**
     * @generated from field: string key = 1;
     */
    key: string;
    /**
     * @generated from field: optional double lt = 2;
     */
    lt?: number;
    /**
     * @generated from field: optional double lte = 3;
     */
    lte?: number;
    /**
     * @generated from field: optional double gt = 4;
     */
    gt?: number;
    /**
     * @generated from field: optional double gte = 5;
     */
    gte?: number;
    constructor(data?: PartialMessage<Range>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Range";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Range;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Range;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Range;
    static equals(a: Range | PlainMessage<Range> | undefined, b: Range | PlainMessage<Range> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SearchWithinRequest
 */
export declare class SearchWithinRequest extends Message<SearchWithinRequest> {
    /**
     * @generated from field: string query = 1;
     */
    query: string;
    /**
     * @generated from field: optional int32 limit = 2;
     */
    limit?: number;
    /**
     * Can only be used over indexed properties.
     *
     * @generated from field: optional operand.v1.Filter filter = 3;
     */
    filter?: Filter;
    /**
     * @generated from field: optional operand.v1.ObjectOptions object_options = 4;
     */
    objectOptions?: ObjectOptions;
    constructor(data?: PartialMessage<SearchWithinRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SearchWithinRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchWithinRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchWithinRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchWithinRequest;
    static equals(a: SearchWithinRequest | PlainMessage<SearchWithinRequest> | undefined, b: SearchWithinRequest | PlainMessage<SearchWithinRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SearchWithinResponse
 */
export declare class SearchWithinResponse extends Message<SearchWithinResponse> {
    /**
     * @generated from field: repeated operand.v1.SearchWithinResponse.Match matches = 1;
     */
    matches: SearchWithinResponse_Match[];
    /**
     * @generated from field: map<string, operand.v1.Object> objects = 2;
     */
    objects: {
        [key: string]: Object$;
    };
    constructor(data?: PartialMessage<SearchWithinResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SearchWithinResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchWithinResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchWithinResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchWithinResponse;
    static equals(a: SearchWithinResponse | PlainMessage<SearchWithinResponse> | undefined, b: SearchWithinResponse | PlainMessage<SearchWithinResponse> | undefined): boolean;
}
/**
 * @generated from message operand.v1.SearchWithinResponse.Match
 */
export declare class SearchWithinResponse_Match extends Message<SearchWithinResponse_Match> {
    /**
     * @generated from field: string match_id = 1;
     */
    matchId: string;
    /**
     * @generated from field: string object_id = 2;
     */
    objectId: string;
    /**
     * @generated from field: string content = 3;
     */
    content: string;
    /**
     * @generated from field: float score = 4;
     */
    score: number;
    /**
     * @generated from field: optional operand.v1.Properties extra = 5;
     */
    extra?: Properties;
    constructor(data?: PartialMessage<SearchWithinResponse_Match>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.SearchWithinResponse.Match";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchWithinResponse_Match;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchWithinResponse_Match;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchWithinResponse_Match;
    static equals(a: SearchWithinResponse_Match | PlainMessage<SearchWithinResponse_Match> | undefined, b: SearchWithinResponse_Match | PlainMessage<SearchWithinResponse_Match> | undefined): boolean;
}
/**
 * Answer is an attempt to answer a question.
 *
 * @generated from message operand.v1.Answer
 */
export declare class Answer extends Message<Answer> {
    /**
     * @generated from field: string answer = 1;
     */
    answer: string;
    /**
     * Confidence is a value between 0 and 1, where 1 is the highest confidence.
     * It indicates how confident we are that the answer is factually correct, using
     * the index content as the ground truth.
     *
     * @generated from field: float confidence = 2;
     */
    confidence: number;
    constructor(data?: PartialMessage<Answer>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.Answer";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Answer;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Answer;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Answer;
    static equals(a: Answer | PlainMessage<Answer> | undefined, b: Answer | PlainMessage<Answer> | undefined): boolean;
}
/**
 * @generated from message operand.v1.AnswerRequest
 */
export declare class AnswerRequest extends Message<AnswerRequest> {
    /**
     * @generated from field: string query = 1;
     */
    query: string;
    /**
     * @generated from field: optional operand.v1.Filter filter = 2;
     */
    filter?: Filter;
    /**
     * @generated from field: optional operand.v1.ObjectOptions object_options = 3;
     */
    objectOptions?: ObjectOptions;
    constructor(data?: PartialMessage<AnswerRequest>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.AnswerRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerRequest;
    static equals(a: AnswerRequest | PlainMessage<AnswerRequest> | undefined, b: AnswerRequest | PlainMessage<AnswerRequest> | undefined): boolean;
}
/**
 * @generated from message operand.v1.AnswerResponse
 */
export declare class AnswerResponse extends Message<AnswerResponse> {
    /**
     * @generated from field: optional operand.v1.Answer answer = 1;
     */
    answer?: Answer;
    /**
     * @generated from field: repeated operand.v1.Object sources = 2;
     */
    sources: Object$[];
    constructor(data?: PartialMessage<AnswerResponse>);
    static readonly runtime: import("@bufbuild/protobuf/dist/types/private/proto-runtime").ProtoRuntime;
    static readonly typeName = "operand.v1.AnswerResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnswerResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnswerResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnswerResponse;
    static equals(a: AnswerResponse | PlainMessage<AnswerResponse> | undefined, b: AnswerResponse | PlainMessage<AnswerResponse> | undefined): boolean;
}
