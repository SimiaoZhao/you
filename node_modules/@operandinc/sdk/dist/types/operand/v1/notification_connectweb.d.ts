import { AcknowledgeRequest, AcknowledgeResponse, PendingRequest, PendingResponse, SettingsRequest, SettingsResponse, UpdateSettingsRequest, UpdateSettingsResponse } from "./notification_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
/**
 * NotificationService manages notifications sent to users. Users are notified
 * when things happen that are relevant to them, and they can configure notification
 * settings (i.e. emails, push notifications, etc.) to control how they are notified.
 * This service authentication via API key, set in the `Authorization` header.
 *
 * @generated from service operand.v1.NotificationService
 */
export declare const NotificationService: {
    readonly typeName: "operand.v1.NotificationService";
    readonly methods: {
        /**
         * Pending returns a list of pending notifications for the user.
         *
         * @generated from rpc operand.v1.NotificationService.Pending
         */
        readonly pending: {
            readonly name: "Pending";
            readonly I: typeof PendingRequest;
            readonly O: typeof PendingResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * Acknowledge acknowledges one or more notifications.
         *
         * @generated from rpc operand.v1.NotificationService.Acknowledge
         */
        readonly acknowledge: {
            readonly name: "Acknowledge";
            readonly I: typeof AcknowledgeRequest;
            readonly O: typeof AcknowledgeResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * Settings returns the notification settings for the user.
         *
         * @generated from rpc operand.v1.NotificationService.Settings
         */
        readonly settings: {
            readonly name: "Settings";
            readonly I: typeof SettingsRequest;
            readonly O: typeof SettingsResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * UpdateSettings updates the notification settings for the user.
         *
         * @generated from rpc operand.v1.NotificationService.UpdateSettings
         */
        readonly updateSettings: {
            readonly name: "UpdateSettings";
            readonly I: typeof UpdateSettingsRequest;
            readonly O: typeof UpdateSettingsResponse;
            readonly kind: MethodKind.Unary;
        };
    };
};
