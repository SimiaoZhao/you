// @generated by protoc-gen-es v0.1.1 with parameter "target=ts+js"
// @generated from file web/v1/user.proto (package web.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { UserProfile } from "../../operand/v1/object_pb.js";
/**
 * @generated from enum web.v1.TokenKind
 */
export var TokenKind;
(function (TokenKind) {
    /**
     * @generated from enum value: TOKEN_KIND_UNSPECIFIED = 0;
     */
    TokenKind[TokenKind["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: TOKEN_KIND_LOGIN = 1;
     */
    TokenKind[TokenKind["LOGIN"] = 1] = "LOGIN";
    /**
     * @generated from enum value: TOKEN_KIND_SESSION = 2;
     */
    TokenKind[TokenKind["SESSION"] = 2] = "SESSION";
})(TokenKind || (TokenKind = {}));
// Retrieve enum metadata with: proto3.getEnumType(TokenKind)
proto3.util.setEnumType(TokenKind, "web.v1.TokenKind", [
    { no: 0, name: "TOKEN_KIND_UNSPECIFIED" },
    { no: 1, name: "TOKEN_KIND_LOGIN" },
    { no: 2, name: "TOKEN_KIND_SESSION" },
]);
/**
 * @generated from enum web.v1.BillingPlan
 */
export var BillingPlan;
(function (BillingPlan) {
    /**
     * @generated from enum value: BILLING_PLAN_UNSPECIFIED = 0;
     */
    BillingPlan[BillingPlan["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: BILLING_PLAN_FREE = 1;
     */
    BillingPlan[BillingPlan["FREE"] = 1] = "FREE";
    /**
     * @generated from enum value: BILLING_PLAN_PRO = 2;
     */
    BillingPlan[BillingPlan["PRO"] = 2] = "PRO";
    /**
     * @generated from enum value: BILLING_PLAN_TEAMS = 3;
     */
    BillingPlan[BillingPlan["TEAMS"] = 3] = "TEAMS";
    /**
     * @generated from enum value: BILLING_PLAN_ENTERPRISE = 4;
     */
    BillingPlan[BillingPlan["ENTERPRISE"] = 4] = "ENTERPRISE";
})(BillingPlan || (BillingPlan = {}));
// Retrieve enum metadata with: proto3.getEnumType(BillingPlan)
proto3.util.setEnumType(BillingPlan, "web.v1.BillingPlan", [
    { no: 0, name: "BILLING_PLAN_UNSPECIFIED" },
    { no: 1, name: "BILLING_PLAN_FREE" },
    { no: 2, name: "BILLING_PLAN_PRO" },
    { no: 3, name: "BILLING_PLAN_TEAMS" },
    { no: 4, name: "BILLING_PLAN_ENTERPRISE" },
]);
/**
 * @generated from enum web.v1.OAuthProvider
 */
export var OAuthProvider;
(function (OAuthProvider) {
    /**
     * @generated from enum value: O_AUTH_PROVIDER_UNSPECIFIED = 0;
     */
    OAuthProvider[OAuthProvider["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: O_AUTH_PROVIDER_GITHUB = 1;
     */
    OAuthProvider[OAuthProvider["GITHUB"] = 1] = "GITHUB";
})(OAuthProvider || (OAuthProvider = {}));
// Retrieve enum metadata with: proto3.getEnumType(OAuthProvider)
proto3.util.setEnumType(OAuthProvider, "web.v1.OAuthProvider", [
    { no: 0, name: "O_AUTH_PROVIDER_UNSPECIFIED" },
    { no: 1, name: "O_AUTH_PROVIDER_GITHUB" },
]);
/**
 * @generated from message web.v1.LoginRequest
 */
export class LoginRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string email = 1;
         */
        this.email = "";
        /**
         * @generated from field: string redirect_url = 2;
         */
        this.redirectUrl = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LoginRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LoginRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LoginRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LoginRequest, a, b);
    }
}
LoginRequest.runtime = proto3;
LoginRequest.typeName = "web.v1.LoginRequest";
LoginRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.LoginResponse
 */
export class LoginResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LoginResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LoginResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LoginResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(LoginResponse, a, b);
    }
}
LoginResponse.runtime = proto3;
LoginResponse.typeName = "web.v1.LoginResponse";
LoginResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "challenge_sent_at", kind: "message", T: Timestamp },
    { no: 2, name: "challenge_expires_at", kind: "message", T: Timestamp },
]);
/**
 * @generated from message web.v1.FinalizeLoginRequest
 */
export class FinalizeLoginRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string challenge = 1;
         */
        this.challenge = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new FinalizeLoginRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new FinalizeLoginRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new FinalizeLoginRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(FinalizeLoginRequest, a, b);
    }
}
FinalizeLoginRequest.runtime = proto3;
FinalizeLoginRequest.typeName = "web.v1.FinalizeLoginRequest";
FinalizeLoginRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "challenge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.Token
 */
export class Token extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string token = 1;
         */
        this.token = "";
        /**
         * @generated from field: web.v1.TokenKind kind = 4;
         */
        this.kind = TokenKind.UNSPECIFIED;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Token().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Token().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Token().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(Token, a, b);
    }
}
Token.runtime = proto3;
Token.typeName = "web.v1.Token";
Token.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "expires_at", kind: "message", T: Timestamp },
    { no: 4, name: "kind", kind: "enum", T: proto3.getEnumType(TokenKind) },
]);
/**
 * @generated from message web.v1.FinalizeLoginResponse
 */
export class FinalizeLoginResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new FinalizeLoginResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new FinalizeLoginResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new FinalizeLoginResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(FinalizeLoginResponse, a, b);
    }
}
FinalizeLoginResponse.runtime = proto3;
FinalizeLoginResponse.typeName = "web.v1.FinalizeLoginResponse";
FinalizeLoginResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "session", kind: "message", T: Token },
]);
/**
 * @generated from message web.v1.GetProfileRequest
 */
export class GetProfileRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetProfileRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetProfileRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetProfileRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GetProfileRequest, a, b);
    }
}
GetProfileRequest.runtime = proto3;
GetProfileRequest.typeName = "web.v1.GetProfileRequest";
GetProfileRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "include_social_stats", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
]);
/**
 * @generated from message web.v1.SocialStats
 */
export class SocialStats extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 indexes = 1;
         */
        this.indexes = 0;
        /**
         * @generated from field: int32 subscribers = 2;
         */
        this.subscribers = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SocialStats().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SocialStats().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SocialStats().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(SocialStats, a, b);
    }
}
SocialStats.runtime = proto3;
SocialStats.typeName = "web.v1.SocialStats";
SocialStats.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "indexes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "subscribers", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
/**
 * @generated from message web.v1.GetProfileResponse
 */
export class GetProfileResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bool is_current_user = 2;
         */
        this.isCurrentUser = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new GetProfileResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new GetProfileResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new GetProfileResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(GetProfileResponse, a, b);
    }
}
GetProfileResponse.runtime = proto3;
GetProfileResponse.typeName = "web.v1.GetProfileResponse";
GetProfileResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: UserProfile },
    { no: 2, name: "is_current_user", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "social_stats", kind: "message", T: SocialStats, opt: true },
]);
/**
 * @generated from message web.v1.UpdateProfileRequest
 */
export class UpdateProfileRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateProfileRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateProfileRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateProfileRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(UpdateProfileRequest, a, b);
    }
}
UpdateProfileRequest.runtime = proto3;
UpdateProfileRequest.typeName = "web.v1.UpdateProfileRequest";
UpdateProfileRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "bio", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "avatar_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message web.v1.UpdateProfileResponse
 */
export class UpdateProfileResponse extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UpdateProfileResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UpdateProfileResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UpdateProfileResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(UpdateProfileResponse, a, b);
    }
}
UpdateProfileResponse.runtime = proto3;
UpdateProfileResponse.typeName = "web.v1.UpdateProfileResponse";
UpdateProfileResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: UserProfile },
]);
/**
 * @generated from message web.v1.BillingStatusRequest
 */
export class BillingStatusRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new BillingStatusRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new BillingStatusRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new BillingStatusRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(BillingStatusRequest, a, b);
    }
}
BillingStatusRequest.runtime = proto3;
BillingStatusRequest.typeName = "web.v1.BillingStatusRequest";
BillingStatusRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message web.v1.BillingStatusResponse
 */
export class BillingStatusResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string stripe_customer_id = 1;
         */
        this.stripeCustomerId = "";
        /**
         * @generated from field: web.v1.BillingPlan plan = 2;
         */
        this.plan = BillingPlan.UNSPECIFIED;
        /**
         * @generated from field: int32 active_pages = 3;
         */
        this.activePages = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new BillingStatusResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new BillingStatusResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new BillingStatusResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(BillingStatusResponse, a, b);
    }
}
BillingStatusResponse.runtime = proto3;
BillingStatusResponse.typeName = "web.v1.BillingStatusResponse";
BillingStatusResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_customer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plan", kind: "enum", T: proto3.getEnumType(BillingPlan) },
    { no: 3, name: "active_pages", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
]);
/**
 * @generated from message web.v1.ConfigureBillingRequest
 */
export class ConfigureBillingRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: web.v1.BillingPlan plan = 1;
         */
        this.plan = BillingPlan.UNSPECIFIED;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ConfigureBillingRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ConfigureBillingRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ConfigureBillingRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ConfigureBillingRequest, a, b);
    }
}
ConfigureBillingRequest.runtime = proto3;
ConfigureBillingRequest.typeName = "web.v1.ConfigureBillingRequest";
ConfigureBillingRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "plan", kind: "enum", T: proto3.getEnumType(BillingPlan) },
    { no: 2, name: "success_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "cancel_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message web.v1.ConfigureBillingResponse
 */
export class ConfigureBillingResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string checkout_link = 1;
         */
        this.checkoutLink = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ConfigureBillingResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ConfigureBillingResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ConfigureBillingResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ConfigureBillingResponse, a, b);
    }
}
ConfigureBillingResponse.runtime = proto3;
ConfigureBillingResponse.typeName = "web.v1.ConfigureBillingResponse";
ConfigureBillingResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "checkout_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.ManageBillingRequest
 */
export class ManageBillingRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ManageBillingRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ManageBillingRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ManageBillingRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ManageBillingRequest, a, b);
    }
}
ManageBillingRequest.runtime = proto3;
ManageBillingRequest.typeName = "web.v1.ManageBillingRequest";
ManageBillingRequest.fields = proto3.util.newFieldList(() => []);
/**
 * @generated from message web.v1.ManageBillingResponse
 */
export class ManageBillingResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string billing_link = 1;
         */
        this.billingLink = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ManageBillingResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ManageBillingResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ManageBillingResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ManageBillingResponse, a, b);
    }
}
ManageBillingResponse.runtime = proto3;
ManageBillingResponse.typeName = "web.v1.ManageBillingResponse";
ManageBillingResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "billing_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.OAuthLinkRequest
 */
export class OAuthLinkRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: web.v1.OAuthProvider provider = 1;
         */
        this.provider = OAuthProvider.UNSPECIFIED;
        /**
         * @generated from field: string redirect_url = 2;
         */
        this.redirectUrl = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OAuthLinkRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuthLinkRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuthLinkRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OAuthLinkRequest, a, b);
    }
}
OAuthLinkRequest.runtime = proto3;
OAuthLinkRequest.typeName = "web.v1.OAuthLinkRequest";
OAuthLinkRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "enum", T: proto3.getEnumType(OAuthProvider) },
    { no: 2, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.OAuthLink
 */
export class OAuthLink extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string public_id = 1;
         */
        this.publicId = "";
        /**
         * @generated from field: web.v1.OAuthProvider provider = 2;
         */
        this.provider = OAuthProvider.UNSPECIFIED;
        /**
         * Note: We don't return refresh_token or expires_at here, since it's purely an internal thing.
         *
         * @generated from field: string access_token = 4;
         */
        this.accessToken = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OAuthLink().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuthLink().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuthLink().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OAuthLink, a, b);
    }
}
OAuthLink.runtime = proto3;
OAuthLink.typeName = "web.v1.OAuthLink";
OAuthLink.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "public_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "enum", T: proto3.getEnumType(OAuthProvider) },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message web.v1.OAuthLinkResponse
 */
export class OAuthLinkResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof web.v1.OAuthLinkResponse.resp
         */
        this.resp = { case: undefined };
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new OAuthLinkResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new OAuthLinkResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new OAuthLinkResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(OAuthLinkResponse, a, b);
    }
}
OAuthLinkResponse.runtime = proto3;
OAuthLinkResponse.typeName = "web.v1.OAuthLinkResponse";
OAuthLinkResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "setup_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "resp" },
    { no: 2, name: "existing", kind: "message", T: OAuthLink, oneof: "resp" },
]);
